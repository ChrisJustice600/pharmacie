import { PrismaClient } from "../lib/generated/prisma";

const prisma = new PrismaClient();

const laboratories = [
  "Sanofi",
  "Pfizer",
  "Novartis",
  "Roche",
  "Merck",
  "Johnson & Johnson",
  "AstraZeneca",
  "GlaxoSmithKline",
  "Bayer",
  "Boehringer Ingelheim",
  "Servier",
  "Bristol-Myers Squibb",
  "Eli Lilly",
  "Abbott",
  "Takeda",
  "Daiichi Sankyo",
  "MSD",
  "Amgen",
  "Gilead Sciences",
  "Biogen",
];

const productCategories = {
  analgesics: [
    { name: "Parac√©tamol", description: "Antalgique et antipyr√©tique" },
    { name: "Ibuprof√®ne", description: "Anti-inflammatoire non st√©ro√Ødien" },
    {
      name: "Aspirine",
      description: "Antalgique, antipyr√©tique et anti-inflammatoire",
    },
    { name: "Diclof√©nac", description: "Anti-inflammatoire non st√©ro√Ødien" },
    { name: "K√©toprof√®ne", description: "Anti-inflammatoire non st√©ro√Ødien" },
    { name: "Naprox√®ne", description: "Anti-inflammatoire non st√©ro√Ødien" },
    { name: "Tramadol", description: "Antalgique opio√Øde" },
    { name: "Cod√©ine", description: "Antitussif et antalgique" },
    { name: "Morphine", description: "Antalgique majeur" },
    { name: "Fentanyl", description: "Antalgique puissant" },
  ],
  antibiotics: [
    { name: "Amoxicilline", description: "Antibiotique p√©nicilline" },
    { name: "Azithromycine", description: "Antibiotique macrolide" },
    { name: "Ciprofloxacine", description: "Antibiotique fluoroquinolone" },
    { name: "Doxycycline", description: "Antibiotique t√©tracycline" },
    { name: "M√©tronidazole", description: "Antibiotique nitro-imidazole" },
    { name: "Clarithromycine", description: "Antibiotique macrolide" },
    { name: "Ceftriaxone", description: "Antibiotique c√©phalosporine" },
    { name: "Vancomycine", description: "Antibiotique glycopeptide" },
    { name: "Gentamicine", description: "Aminoside" },
    {
      name: "Trim√©thoprime-sulfam√©thoxazole",
      description: "Antibiotique sulfamide",
    },
  ],
  cardiovascular: [
    { name: "Amlodipine", description: "Antagoniste calcique" },
    { name: "Lisinopril", description: "IEC" },
    { name: "Atorvastatine", description: "Statine" },
    { name: "M√©thotrexate", description: "Immunosuppresseur" },
    { name: "Warfarine", description: "Anticoagulant" },
    { name: "Clopidogrel", description: "Antiagr√©gant plaquettaire" },
    { name: "Digoxine", description: "Cardiotonique" },
    { name: "Furos√©mide", description: "Diur√©tique de l'anse" },
    { name: "Spironolactone", description: "Diur√©tique √©pargneur potassique" },
    { name: "Propranolol", description: "B√™tabloquant" },
  ],
  respiratory: [
    { name: "Salbutamol", description: "Bronchodilatateur b√™ta-2" },
    { name: "Budesonide", description: "Corticost√©ro√Øde inhal√©" },
    { name: "Montelukast", description: "Antileucotri√®ne" },
    { name: "Th√©ophylline", description: "Bronchodilatateur" },
    { name: "Ipratropium", description: "Anticholinergique" },
    { name: "Fluticasone", description: "Corticost√©ro√Øde nasal" },
    { name: "Dexam√©thasone", description: "Corticost√©ro√Øde" },
    { name: "Prednisolone", description: "Corticost√©ro√Øde" },
    { name: "Hydrocortisone", description: "Corticost√©ro√Øde" },
    { name: "B√©tam√©thasone", description: "Corticost√©ro√Øde" },
  ],
  digestive: [
    { name: "Om√©prazole", description: "IPP - Antiulc√©reux" },
    { name: "Pantoprazole", description: "IPP - Antiulc√©reux" },
    { name: "Esom√©prazole", description: "IPP - Antiulc√©reux" },
    { name: "Lansoprazole", description: "IPP - Antiulc√©reux" },
    { name: "Ranitidine", description: "Anti-H2" },
    { name: "Domp√©ridone", description: "Procin√©tique" },
    { name: "M√©clozine", description: "Antivertigineux" },
    { name: "Loperamide", description: "Antidiarrh√©ique" },
    { name: "Bisacodyl", description: "Laxatif stimulant" },
    { name: "Macrogol", description: "Laxatif osmotique" },
  ],
  psychiatric: [
    { name: "Sertraline", description: "Antid√©presseur ISRS" },
    { name: "Parox√©tine", description: "Antid√©presseur ISRS" },
    { name: "Fluox√©tine", description: "Antid√©presseur ISRS" },
    { name: "Escitalopram", description: "Antid√©presseur ISRS" },
    { name: "Venlafaxine", description: "Antid√©presseur IRSN" },
    { name: "Dulox√©tine", description: "Antid√©presseur IRSN" },
    { name: "Alprazolam", description: "Benzodiaz√©pine anxiolytique" },
    { name: "Diaz√©pam", description: "Benzodiaz√©pine anxiolytique" },
    { name: "Loraz√©pam", description: "Benzodiaz√©pine anxiolytique" },
    { name: "Zolpidem", description: "Hypnotique" },
  ],
  vitamins: [
    { name: "Vitamine D3", description: "Suppl√©ment vitaminique" },
    { name: "Vitamine C", description: "Antioxydant" },
    { name: "Vitamine B12", description: "Vitamine B12" },
    { name: "Acide folique", description: "Vitamine B9" },
    { name: "Fer", description: "Oligo-√©l√©ment" },
    { name: "Calcium", description: "Min√©ral" },
    { name: "Magn√©sium", description: "Min√©ral" },
    { name: "Zinc", description: "Oligo-√©l√©ment" },
    { name: "Iode", description: "Oligo-√©l√©ment" },
    { name: "Om√©ga-3", description: "Acides gras essentiels" },
  ],
  dermatology: [
    { name: "Benzoyl peroxide", description: "Traitement acn√©" },
    { name: "R√©tino√Øde", description: "D√©riv√© vitamine A" },
    { name: "Hydroquinone", description: "D√©pigmentant" },
    { name: "Clotrimazole", description: "Antifongique" },
    { name: "Miconazole", description: "Antifongique" },
    { name: "K√©toconazole", description: "Antifongique" },
    { name: "Perm√©thrine", description: "Antiparasitaire" },
    { name: "B√©tam√©thasone", description: "Corticost√©ro√Øde topique" },
    { name: "Tacrolimus", description: "Immunosuppresseur topique" },
    { name: "Pimecrolimus", description: "Immunosuppresseur topique" },
  ],
  ophthalmology: [
    { name: "Timolol", description: "B√™tabloquant ophtalmique" },
    { name: "Latanoprost", description: "Analogue prostaglandine" },
    { name: "Dorzolamide", description: "Inhibiteur anhydrase carbonique" },
    { name: "Tobramycine", description: "Antibiotique ophtalmique" },
    { name: "Ofloxacine", description: "Antibiotique fluoroquinolone" },
    { name: "Dexam√©thasone", description: "Corticost√©ro√Øde ophtalmique" },
    { name: "Acide hyaluronique", description: "Larme artificielle" },
    { name: "T√©trahydrozoline", description: "Vasoconstricteur" },
    { name: "Atropine", description: "Parasympatholytique" },
    { name: "Cyclopentolate", description: "Parasympatholytique" },
  ],
  oncology: [
    { name: "Tamoxif√®ne", description: "SERM anti-≈ìstrog√®ne" },
    { name: "L√©trozole", description: "Inhibiteur aromatase" },
    { name: "Anastrozole", description: "Inhibiteur aromatase" },
    { name: "Ex√©mestane", description: "Inhibiteur aromatase" },
    { name: "Paclitaxel", description: "Taxane" },
    { name: "Doc√©taxel", description: "Taxane" },
    { name: "Irinot√©can", description: "Antitopoisom√©rase" },
    { name: "Oxaliplatine", description: "Agent alkylant" },
    { name: "Cap√©citabine", description: "Analogique pyrimidique" },
    { name: "Imatinib", description: "Inhibiteur tyrosine kinase" },
  ],
  vaccines: [
    { name: "Vaccin grippe", description: "Vaccin antigrippal" },
    { name: "Vaccin DTP", description: "Dipht√©rie-T√©tanos-Poliomy√©lite" },
    { name: "Vaccin h√©patite B", description: "Vaccin anti-h√©patite B" },
    { name: "Vaccin HPV", description: "Vaccin papillomavirus" },
    { name: "Vaccin pneumocoque", description: "Vaccin antipneumococcique" },
    { name: "Vaccin m√©ningocoque", description: "Vaccin antim√©ningococcique" },
    { name: "Vaccin rougeole-oreillons-rub√©ole", description: "Vaccin ROR" },
    { name: "Vaccin varicelle", description: "Vaccin antivaricelleux" },
    { name: "Vaccin zona", description: "Vaccin anti-zona" },
    { name: "Vaccin COVID-19", description: "Vaccin anti-COVID-19" },
  ],
};

function getRandomElement<T>(array: T[]): T {
  return array[Math.floor(Math.random() * array.length)];
}

function getRandomInt(min: number, max: number): number {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

async function main() {
  console.log("üå± D√©but du seeding de la base de donn√©es...");

  const products = [];
  let productCount = 0;

  // G√©n√©rer 500 produits
  for (let i = 0; i < 500; i++) {
    const categoryKeys = Object.keys(productCategories) as Array<
      keyof typeof productCategories
    >;
    const randomCategory = getRandomElement(categoryKeys);
    const categoryProducts = productCategories[randomCategory];
    const baseProduct = getRandomElement(categoryProducts);

    // G√©n√©rer des variations pour atteindre 500 produits
    const variations = [
      "500mg",
      "250mg",
      "1000mg",
      "200mg",
      "400mg",
      "50mg",
      "75mg",
      "150mg",
      "300mg",
      "600mg",
    ];
    const forms = [
      "comprim√©",
      "g√©lule",
      "sirop",
      "solution injectable",
      "pommade",
      "cr√®me",
      "gel",
      "suppositoire",
      "ovule",
      "collyre",
    ];
    const packaging = [
      "bo√Æte de 30",
      "flacon de 100ml",
      "tube de 30g",
      "bo√Æte de 20",
      "flacon de 60ml",
      "bo√Æte de 10",
      "tube de 50g",
      "bo√Æte de 50",
      "flacon de 150ml",
      "bo√Æte de 100",
    ];

    const variation = getRandomElement(variations);
    const form = getRandomElement(forms);
    const pack = getRandomElement(packaging);
    const laboratory = getRandomElement(laboratories);

    const productName = `${baseProduct.name} ${variation} ${form}`;
    const fullDescription = `${baseProduct.description} - ${pack}`;

    // Prix en Francs Congolais (CDF) - prix r√©alistes pour m√©dicaments
    const baseSellingPrices = {
      analgesics: { min: 1500, max: 8500 }, // Parac√©tamol, Ibuprof√®ne, etc.
      antibiotics: { min: 5000, max: 25000 }, // Antibiotiques plus chers
      cardiovascular: { min: 3000, max: 15000 }, // M√©dicaments cardiovasculaires
      respiratory: { min: 4000, max: 18000 }, // M√©dicaments respiratoires
      digestive: { min: 2000, max: 12000 }, // Anti-acides, etc.
      psychiatric: { min: 8000, max: 35000 }, // Psychotropes plus chers
      vitamins: { min: 1000, max: 6000 }, // Suppl√©ments moins chers
      dermatology: { min: 3000, max: 15000 }, // Dermatologiques
      ophthalmology: { min: 2500, max: 10000 }, // Ophtalmologiques
      oncology: { min: 50000, max: 200000 }, // Traitements oncologiques tr√®s chers
      vaccines: { min: 15000, max: 75000 }, // Vaccins
    };

    const categoryPrices = baseSellingPrices[randomCategory];
    const sellingPrice = getRandomInt(categoryPrices.min, categoryPrices.max);
    // Prix d'achat = 60-80% du prix de vente
    const costPrice = Math.round(sellingPrice * (0.6 + Math.random() * 0.2));

    products.push({
      name: productName,
      description: fullDescription,
      laboratory: laboratory,
      minStock: getRandomInt(5, 50), // Stock minimum entre 5 et 50
      sellingPrice: sellingPrice,
      costPrice: costPrice,
    });

    productCount++;
    if (productCount % 50 === 0) {
      console.log(`üì¶ ${productCount} produits g√©n√©r√©s...`);
    }
  }

  // Ins√©rer les produits par lots pour √©viter les timeouts
  const batchSize = 50;
  for (let i = 0; i < products.length; i += batchSize) {
    const batch = products.slice(i, i + batchSize);
    await prisma.product.createMany({
      data: batch,
      skipDuplicates: true,
    });
    console.log(
      `‚úÖ Lot ${Math.floor(i / batchSize) + 1} ins√©r√© (${batch.length} produits)`
    );
  }

  console.log("üéâ Seeding termin√© ! 500 produits cr√©√©s avec succ√®s.");
  console.log("üìä Statistiques :");
  console.log(`   ‚Ä¢ Total produits : ${products.length}`);
  console.log(`   ‚Ä¢ Laboratoires repr√©sent√©s : ${laboratories.length}`);
  console.log(
    `   ‚Ä¢ Cat√©gories m√©dicales : ${Object.keys(productCategories).length}`
  );
  console.log(
    `   ‚Ä¢ Prix en Francs Congolais (CDF) : ‚úÖ Appliqu√©s √† tous les produits`
  );
  console.log(`   ‚Ä¢ Prix de vente : 1,000 - 200,000 CDF selon la cat√©gorie`);
  console.log(`   ‚Ä¢ Prix d'achat : 60-80% du prix de vente`);
}

main()
  .catch((e) => {
    console.error("‚ùå Erreur lors du seeding :", e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
